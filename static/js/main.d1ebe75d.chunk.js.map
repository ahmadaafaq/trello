{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/Board.js","actions/boardActions.js","components/Thumbnail.js","components/Home.js","routes.js","components/App.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","ListsContainer","Board_templateObject","BackToBoards","Board_templateObject2","Board","onDragEnd","result","destination","source","match","params","listOrder","react_router_dom","textDecoration","to","direction","listCards","components_TrelloList","ThumbnailStyle","Thumbnail_templateObject","Title","Thumbnail_templateObject2","Thumbnail","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","CreateTitle","h3","Home_templateObject3","BoardTitle","Home_templateObject4","CreateInput","Home_templateObject5","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","components_Thumbnail","textAlign","Routes","react_router","path","exact","component","Home","App","routes","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d1ebe75d.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        boardID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"Test List\",\n    board: \"board-0\"\n  }\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Todo 1\",\n    id: `card-0`,\n    list: \"list-0\"\n  }\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"initial board\"\n  }\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nconsole.log(uuid());\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst BackToBoards = styled.div`\n  font-size: 20px;\n  color: white !important;\n  font-weight: bold;\n  font-family: fantasy;\n`;\n\nclass Board extends PureComponent {\n  componentDidMount() {\n    const { boardID } = this.props.match.params;\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link style={{ textDecoration: \"none\" }} to=\"/\">\n          <BackToBoards>Boards</BackToBoards>\n        </Link>\n        <h2>{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                } else {\n                  return null;\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards\n});\n\nexport default connect(mapStateToProps)(Board);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id\n  };\n};\n\nexport const addBoard = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ThumbnailStyle = styled.div`\n  height: 40px;\n  width: 280px;\n  background: #030403f0;\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 3px;\n  box-shadow: 0 2px 4px grey;\n  font-family: cursive;\n`;\n\nconst Title = styled.h4`\n  color: #ddd;\n  text-decoration: none;\n`;\n\nconst Thumbnail = ({ title }) => {\n  return (\n    <ThumbnailStyle>\n      <Title>{title}</Title>\n    </ThumbnailStyle>\n  );\n};\n\nexport default Thumbnail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard } from \"../actions\";\nimport Thumbnail from \"./Thumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 35px;\n  color: white;\n  font-weight: bold;\n  font-family: fantasy;\n`;\n\nconst BoardTitle = styled.h4`\n  font-size: 20px;\n  color: white;\n  font-weight: bold;\n  font-family: fantasy;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: solid black;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\nconst Home = ({ boards, boardOrder, dispatch }) => {\n  const [newBoardTitle, setNewBoardTitle] = useState('');\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle));\n    setNewBoardTitle('');\n  };\n\n  const renderBoards = () => {\n    return boardOrder.map(boardID => {\n      const board = boards[boardID];\n\n      return (\n        <Link\n          key={boardID}\n          to={`/${board.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <Thumbnail {...board} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create Board</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newBoardTitle}\n          placeholder=\"title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      <BoardTitle>Trello Boards</BoardTitle>\n      <Thumbnails>{renderBoards()}</Thumbnails>\n      {renderCreateBoard()}\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Board from \"./components/Board\";\nimport Home from \"./components/Home\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:boardID\" component={Board} />\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { PureComponent } from \"react\";\nimport Routes from \"../routes\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: rgb(0, 174, 204);\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}